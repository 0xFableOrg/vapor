/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vapor, VaporInterface } from "../Vapor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongCreator",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameID",
        type: "uint256",
      },
    ],
    name: "GameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
    ],
    name: "completeSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameID",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "initialSettings",
        type: "bytes",
      },
    ],
    name: "createSession",
    outputs: [
      {
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameConfigs",
    outputs: [
      {
        internalType: "uint256",
        name: "gameID",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "function (uint256,bytes) external",
        name: "sendInitialSettings",
        type: "function",
      },
      {
        internalType: "function (uint256,address[],bytes,bytes[]) external",
        name: "startCallback",
        type: "function",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getJoinableSessions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gameID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sessionID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinableIndex",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum Vapor.GameStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "initialSettings",
            type: "bytes",
          },
        ],
        internalType: "struct Vapor.Session[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextGameID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextSessionID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gameID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "enum Vapor.ValueType",
                name: "valueType",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "allowedValues",
                type: "string[]",
              },
            ],
            internalType: "struct Vapor.SettingDeclaration[]",
            name: "initialSettingsManifest",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "enum Vapor.ValueType",
                name: "valueType",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "allowedValues",
                type: "string[]",
              },
            ],
            internalType: "struct Vapor.SettingDeclaration[]",
            name: "startSettingsManifest",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "enum Vapor.ValueType",
                name: "valueType",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "allowedValues",
                type: "string[]",
              },
            ],
            internalType: "struct Vapor.SettingDeclaration[]",
            name: "playerSettingsManifest",
            type: "tuple[]",
          },
          {
            internalType: "function (uint256,bytes) external",
            name: "sendInitialSettings",
            type: "function",
          },
          {
            internalType: "function (uint256,address[],bytes,bytes[]) external",
            name: "startCallback",
            type: "function",
          },
        ],
        internalType: "struct Vapor.GameConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    name: "registerGame",
    outputs: [
      {
        internalType: "uint256",
        name: "gameID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sessions",
    outputs: [
      {
        internalType: "uint256",
        name: "gameID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "joinableIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "enum Vapor.GameStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "initialSettings",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        internalType: "bytes",
        name: "startSettings",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "playerSettings",
        type: "bytes[]",
      },
    ],
    name: "startSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "allowedValues",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "validateEnumValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0155611c63806100526000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063893a8b0f11610076578063a4eef40a1161005b578063a4eef40a1461017f578063c0d0ee7914610194578063f0ef4b31146101a757600080fd5b8063893a8b0f14610149578063918791021461016c57600080fd5b80632b333a47116100a75780632b333a47146100f4578063673ee37c1461011a57806383c4b7a31461012357600080fd5b80631dcf1df2146100c35780631f5754c0146100df575b600080fd5b6100cc60035481565b6040519081526020015b60405180910390f35b6100f26100ed366004610ffd565b6101ba565b005b610107610102366004610ffd565b61026c565b6040516100d6979695949392919061107a565b6100cc60015481565b610136610131366004610ffd565b610352565b6040516100d69796959493929190611159565b61015c610157366004611255565b6104cf565b60405190151581526020016100d6565b6100cc61017a3660046112c1565b61055c565b610187610674565b6040516100d69190611304565b6100cc6101a23660046113fe565b6108f8565b6100f26101b5366004611478565b610bc2565b600081815260026020818152604080842080548552918490529092209081015473ffffffffffffffffffffffffffffffffffffffff163314610228576040517f7f039c1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060040180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167402000000000000000000000000000000000000000017905550565b6000602081905290815260409020805460018201805491929161028e9061151c565b80601f01602080910402602001604051908101604052809291908181526020018280546102ba9061151c565b80156103075780601f106102dc57610100808354040283529160200191610307565b820191906000526020600020905b8154815290600101906020018083116102ea57829003601f168201915b5050505060028301546006840154600790940154929373ffffffffffffffffffffffffffffffffffffffff91821693602082811c8416945063ffffffff928316939082901c16911687565b6002602081905260009182526040909120805460018201549282015460038301805492949391926103829061151c565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae9061151c565b80156103fb5780601f106103d0576101008083540402835291602001916103fb565b820191906000526020600020905b8154815290600101906020018083116103de57829003601f168201915b505050506004830154600584018054939473ffffffffffffffffffffffffffffffffffffffff8316947401000000000000000000000000000000000000000090930460ff1693509161044c9061151c565b80601f01602080910402602001604051908101604052809291908181526020018280546104789061151c565b80156104c55780601f1061049a576101008083540402835291602001916104c5565b820191906000526020600020905b8154815290600101906020018083116104a857829003601f168201915b5050505050905087565b6000805b8481101561054e5783836040516104eb929190611569565b604051809103902086868381811061050557610505611579565b905060200281019061051791906115a8565b604051610525929190611569565b60405180910390200361053c576001915050610554565b806105468161163c565b9150506104d3565b50600090505b949350505050565b600180546000918261056d8361163c565b90915550600081815260208181526040909120828155919250610592908401846115a8565b60018301916105a29190836116f2565b506105b36060840160408501611836565b6002820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556106136003820161060e6060860186611851565b610e2f565b6106276004820161060e6080860186611851565b61063b6005820161060e60a0860186611851565b6040518281527f6ba49772de98d7caa0bbc51b24dfec5673a2f67fc9932e20e1295eca2947d43b9060200160405180910390a150919050565b60045460609060009067ffffffffffffffff81111561069557610695611674565b6040519080825280602002602001820160405280156106ce57816020015b6106bb610f99565b8152602001906001900390816106b35790505b50905060005b6004548110156108f25760026000600483815481106106f5576106f5611579565b906000526020600020015481526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820180546107479061151c565b80601f01602080910402602001604051908101604052809291908181526020018280546107739061151c565b80156107c05780601f10610795576101008083540402835291602001916107c0565b820191906000526020600020905b8154815290600101906020018083116107a357829003601f168201915b5050509183525050600482015473ffffffffffffffffffffffffffffffffffffffff8116602083015260409091019074010000000000000000000000000000000000000000900460ff16600281111561081b5761081b6110ef565b600281111561082c5761082c6110ef565b81526020016005820180546108409061151c565b80601f016020809104026020016040519081016040528092919081815260200182805461086c9061151c565b80156108b95780601f1061088e576101008083540402835291602001916108b9565b820191906000526020600020905b81548152906001019060200180831161089c57829003601f168201915b5050505050815250508282815181106108d4576108d4611579565b602002602001018190525080806108ea9061163c565b9150506106d4565b50919050565b60038054600091826109098361163c565b90915550600087815260208181526040918290206006810154925160e084901b7fffffffff00000000000000000000000000000000000000000000000000000000168152939450929082901c73ffffffffffffffffffffffffffffffffffffffff169163ffffffff169061098590859088908890600401611902565b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050506040518060e00160405280888152602001838152602001600480549050815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505033602084015250604090910190815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508481526002602081815260409283902085518155908501516001820155918401519082015560608301519091506003820190610a969082611925565b50608082015160048201805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117825560a0850151927fffffffffffffffffffffff000000000000000000000000000000000000000000161774010000000000000000000000000000000000000000836002811115610b3257610b326110ef565b021790555060c08201516005820190610b4b9082611925565b5050600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018390555060405182815287907fa26856d25e558c79e1632806bc6824075cf59885a115825f2aab62385a3f71429060200160405180910390a25095945050505050565b6000878152600260205260409020600481015473ffffffffffffffffffffffffffffffffffffffff163314610c23576040517fbd9a394900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054610c3390600190611a3f565b81548110610c4357610c43611579565b90600052602060002001546004826002015481548110610c6557610c65611579565b90600052602060002001819055508060020154600260006004846002015481548110610c9357610c93611579565b90600052602060002001548152602001908152602001600020600201819055506004805480610cc457610cc4611a58565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810183905592909201909255600483810180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556002840183905583548084528383526040938490206007810154945160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681529194909381901c73ffffffffffffffffffffffffffffffffffffffff169263ffffffff90911691610dc4918e918e918e918e918e918e918e9101611a87565b600060405180830381600087803b158015610dde57600080fd5b505af1158015610df2573d6000803e3d6000fd5b50506040518c92508491507fa2dfaa3573b86004ec9d4d4abe5068d942579c59da4da8cd0d9e45e71a393bc190600090a350505050505050505050565b60005b81811015610f93578354600101808555600085815290859083908110610e5a57610e5a611579565b9060005260206000209060030201905036848484818110610e7d57610e7d611579565b9050602002810190610e8f9190611bce565b9050610e9b81806115a8565b8391610ea89190836116f2565b50610eb96040820160208301611c0c565b6001808401805490917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911690836006811115610ef957610ef96110ef565b021790555060005b610f0e6040830183611851565b9050811015610f7d5760028301610f286040840184611851565b83818110610f3857610f38611579565b9050602002810190610f4a91906115a8565b82546001810184556000938452602090932090920191610f6a91836116f2565b5080610f758161163c565b915050610f01565b5050508080610f8b9061163c565b915050610e32565b50505050565b6040518060e0016040528060008152602001600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115610ff057610ff06110ef565b8152602001606081525090565b60006020828403121561100f57600080fd5b5035919050565b6000815180845260005b8181101561103c57602081850181015186830182015201611020565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b87815260a06020820152600061109360a0830189611016565b905073ffffffffffffffffffffffffffffffffffffffff871660408301526110ce60608301868860201b63ffffffff919091161760401b9052565b63ffffffff8316602085901b1760401b608083015298975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611155577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b87815286602082015285604082015260e06060820152600061117e60e0830187611016565b73ffffffffffffffffffffffffffffffffffffffff861660808401526111a760a084018661111e565b82810360c08401526111b98185611016565b9a9950505050505050505050565b60008083601f8401126111d957600080fd5b50813567ffffffffffffffff8111156111f157600080fd5b6020830191508360208260051b850101111561120c57600080fd5b9250929050565b60008083601f84011261122557600080fd5b50813567ffffffffffffffff81111561123d57600080fd5b60208301915083602082850101111561120c57600080fd5b6000806000806040858703121561126b57600080fd5b843567ffffffffffffffff8082111561128357600080fd5b61128f888389016111c7565b909650945060208701359150808211156112a857600080fd5b506112b587828801611213565b95989497509550505050565b6000602082840312156112d357600080fd5b813567ffffffffffffffff8111156112ea57600080fd5b820161010081850312156112fd57600080fd5b9392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156113f0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815160e08151855288820151898601528782015188860152606080830151828288015261138983880182611016565b92505050608073ffffffffffffffffffffffffffffffffffffffff8184015116818701525060a0808301516113c08288018261111e565b505060c080830151925085820381870152506113dc8183611016565b96890196945050509086019060010161132b565b509098975050505050505050565b60008060008060006060868803121561141657600080fd5b85359450602086013567ffffffffffffffff8082111561143557600080fd5b61144189838a01611213565b9096509450604088013591508082111561145a57600080fd5b5061146788828901611213565b969995985093965092949392505050565b60008060008060008060006080888a03121561149357600080fd5b87359650602088013567ffffffffffffffff808211156114b257600080fd5b6114be8b838c016111c7565b909850965060408a01359150808211156114d757600080fd5b6114e38b838c01611213565b909650945060608a01359150808211156114fc57600080fd5b506115098a828b016111c7565b989b979a50959850939692959293505050565b600181811c9082168061153057607f821691505b6020821081036108f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115dd57600080fd5b83018035915067ffffffffffffffff8211156115f857600080fd5b60200191503681900382131561120c57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361166d5761166d61160d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f8211156116ed57600081815260208120601f850160051c810160208610156116ca5750805b601f850160051c820191505b818110156116e9578281556001016116d6565b5050505b505050565b67ffffffffffffffff83111561170a5761170a611674565b61171e83611718835461151c565b836116a3565b6000601f841160018114611770576000851561173a5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355611806565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156117bf578685013582556020948501946001909201910161179f565b50868210156117fa577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461183157600080fd5b919050565b60006020828403121561184857600080fd5b6112fd8261180d565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261188657600080fd5b83018035915067ffffffffffffffff8211156118a157600080fd5b6020019150600581901b360382131561120c57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b83815260406020820152600061191c6040830184866118b9565b95945050505050565b815167ffffffffffffffff81111561193f5761193f611674565b6119538161194d845461151c565b846116a3565b602080601f8311600181146119a657600084156119705750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556116e9565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156119f3578886015182559484019460019091019084016119d4565b5085821015611a2f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115611a5257611a5261160d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b87815260806020808301829052908201879052600090889060a08401835b8a811015611ade5773ffffffffffffffffffffffffffffffffffffffff611acb8561180d565b1682529282019290820190600101611aa5565b508481036040860152611af281898b6118b9565b8581036060870152868152925050808201600586901b830182018760005b88811015611bbb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b3603018112611b7157600080fd5b8a01858101903567ffffffffffffffff811115611b8d57600080fd5b803603821315611b9c57600080fd5b611ba78582846118b9565b958701959450505090840190600101611b10565b50909d9c50505050505050505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112611c0257600080fd5b9190910192915050565b600060208284031215611c1e57600080fd5b8135600781106112fd57600080fdfea264697066735822122099bdf2b343855a3ccf6f904fc7d568a9ce84f1f24f0c9ab74870c125f7070fdc64736f6c63430008130033";

type VaporConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaporConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vapor__factory extends ContractFactory {
  constructor(...args: VaporConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Vapor> {
    return super.deploy(overrides || {}) as Promise<Vapor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vapor {
    return super.attach(address) as Vapor;
  }
  override connect(signer: Signer): Vapor__factory {
    return super.connect(signer) as Vapor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaporInterface {
    return new utils.Interface(_abi) as VaporInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vapor {
    return new Contract(address, _abi, signerOrProvider) as Vapor;
  }
}
