/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DemoGame, DemoGameInterface } from "../DemoGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Vapor",
        name: "vapor",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "initialSettings",
        type: "bytes",
      },
    ],
    name: "receiveInitialSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sessionID",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        internalType: "bytes",
        name: "startSettings",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "playerSettings",
        type: "bytes[]",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b50610d1e8061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806319ab453c146100465780638fd4ebfa1461005b578063f1636ee81461006e575b600080fd5b61005961005436600461082e565b610085565b005b6100596100693660046108b4565b505050565b61005961007c366004610945565b50505050505050565b60005460ff161561009557600080fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781556040805182815260208101909152816100e9565b60608152602001906001900390816100d45790505b506040805160038082526080820190925291925060009190816020015b60408051606080820183528082526000602083015291810191909152815260200190600190039081610106579050506040805160a08101909152600c606082019081527f506c6179657220436f756e7400000000000000000000000000000000000000006080830152815290915060208101600281526020018381525081600081518110610196576101966109e9565b6020908102919091018101919091526040805160a081019091526012606082019081527f576f726c64436f696e205665726966696564000000000000000000000000000060808301528152908101600081526020018381525081600181518110610202576102026109e9565b6020908102919091018101919091526040805160a08101909152600f606082019081527f4e657874494420566572696669656400000000000000000000000000000000006080830152815290810160008152602001838152508160028151811061026e5761026e6109e9565b602090810291909101015260408051600280825260608201909252600091816020015b604080516060808201835280825260006020830152918101919091528152602001906001900390816102915750506040805160038082526080820190925291925060009190602082015b60608152602001906001900390816102db5790505090506040518060400160405280600781526020017f537061776e2031000000000000000000000000000000000000000000000000008152508160008151811061033b5761033b6109e9565b60200260200101819052506040518060400160405280600781526020017f537061776e2032000000000000000000000000000000000000000000000000008152508160018151811061038f5761038f6109e9565b60200260200101819052506040518060400160405280600781526020017f537061776e203300000000000000000000000000000000000000000000000000815250816001815181106103e3576103e36109e9565b6020908102919091018101919091526040805160a08101909152600e606082019081527f537061776e204c6f636174696f6e0000000000000000000000000000000000006080830152815290810160068152602001828152508260008151811061044f5761044f6109e9565b6020908102919091018101919091526040805160a08101909152600e606082019081527f557365205768697465626f617264000000000000000000000000000000000000608083015281529081016000815260200185815250826001815181106104bb576104bb6109e9565b602090810291909101015260408051600280825260608201909252600091816020015b604080516060808201835280825260006020830152918101919091528152602001906001900390816104de579050506040805160a08101909152600b606082019081527f506c61796572204e616d65000000000000000000000000000000000000000000608083015281529091506020810160058152602001868152508160008151811061056e5761056e6109e9565b602090810291909101015260408051600380825260808201909252600091816020015b60608152602001906001900390816105915790505090506040518060400160405280600881526020017f4176617461722031000000000000000000000000000000000000000000000000815250816000815181106105f1576105f16109e9565b60200260200101819052506040518060400160405280600881526020017f417661746172203200000000000000000000000000000000000000000000000081525081600181518110610645576106456109e9565b60200260200101819052506040518060400160405280600881526020017f417661746172203300000000000000000000000000000000000000000000000081525081600281518110610699576106996109e9565b6020908102919091018101919091526040805160a081019091526006606082019081527f417661746172000000000000000000000000000000000000000000000000000060808301528152908101600581526020018281525082600181518110610705576107056109e9565b60209081029190910181019190915260408051610100810182526000815281518083018352600981527f44656d6f2047616d65000000000000000000000000000000000000000000000081850152818401523381830152606081018890526080810187905260a081018590523090921b638fd4ebfa8117821b60c084015263f1636ee817811b60e0830152517f9187910200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916916391879102916107df9190600401610b9a565b6020604051808303816000875af11580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190610ccf565b60015550505050505050565b60006020828403121561084057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461086457600080fd5b9392505050565b60008083601f84011261087d57600080fd5b50813567ffffffffffffffff81111561089557600080fd5b6020830191508360208285010111156108ad57600080fd5b9250929050565b6000806000604084860312156108c957600080fd5b83359250602084013567ffffffffffffffff8111156108e757600080fd5b6108f38682870161086b565b9497909650939450505050565b60008083601f84011261091257600080fd5b50813567ffffffffffffffff81111561092a57600080fd5b6020830191508360208260051b85010111156108ad57600080fd5b60008060008060008060006080888a03121561096057600080fd5b87359650602088013567ffffffffffffffff8082111561097f57600080fd5b61098b8b838c01610900565b909850965060408a01359150808211156109a457600080fd5b6109b08b838c0161086b565b909650945060608a01359150808211156109c957600080fd5b506109d68a828b01610900565b989b979a50959850939692959293505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815180845260005b81811015610a3e57602081850181015186830182015201610a22565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60008282518085526020808601955060058183821b85010182870160005b85811015610b8c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080888503018b52825160608151818752610adf82880182610a18565b9150508782015160078110610b1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b86890152604091820151868203928701929092528151808252918801918189019080891b83018a0160005b82811015610b745786858303018452610b62828751610a18565b958c0195938c01939150600101610b48565b509e8a019e9750505093870193505050600101610a9a565b509098975050505050505050565b602081528151602082015260006020830151610100806040850152610bc3610120850183610a18565b91506040850151610bec606086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080868503016080870152610c278483610a7c565b935060808701519150808685030160a0870152610c448483610a7c565b935060a08701519150808685030160c087015250610c628382610a7c565b92505060c0850151610c9860e08601827fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000169052565b5060e08501517fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008116858301525090949350505050565b600060208284031215610ce157600080fd5b505191905056fea264697066735822122027c287c28d000aedc8e101792d37c319a2c26a7fb037f7540482991ca822e24364736f6c63430008130033";

type DemoGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoGame__factory extends ContractFactory {
  constructor(...args: DemoGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DemoGame> {
    return super.deploy(overrides || {}) as Promise<DemoGame>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DemoGame {
    return super.attach(address) as DemoGame;
  }
  override connect(signer: Signer): DemoGame__factory {
    return super.connect(signer) as DemoGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoGameInterface {
    return new utils.Interface(_abi) as DemoGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemoGame {
    return new Contract(address, _abi, signerOrProvider) as DemoGame;
  }
}
